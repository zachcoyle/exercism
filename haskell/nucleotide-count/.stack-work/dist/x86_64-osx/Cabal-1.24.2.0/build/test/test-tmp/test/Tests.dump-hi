
==================== FINAL INTERFACE ====================
2017-11-29 05:11:50.527734 UTC

interface main@main:Main 8002
  interface hash: 1d41cbe5908fc883c5ae68644ac765b7
  ABI hash: f71156b58c58d1599c0c6bf9cb89ab14
  export-list hash: 6952d700fc3d1eeb21800709e6661aa2
  orphan hash: bcc83a7c1355cbef611fafc6f27eb072
  flag hash: 375998df8fa893bc4f3d8b223664f32a
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: HUnit-1.5.0.0@HUnit-1.5.0.0-DvjF79OHhCC7SzfeEty4OI
                      QuickCheck-2.9.2@QuickCheck-2.9.2-LvlomhGMxrFBkX1zwiWpQu
                      ansi-terminal-0.6.3.1@ansi-terminal-0.6.3.1-3RTqikoQf47ajVD9m8zgB
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj base-4.9.1.0
                      call-stack-0.1.0@call-stack-0.1.0-FYVrCPXGP9EGAuTW32963O
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.3.0.0@directory-1.3.0.0
                      filepath-1.4.1.1@filepath-1.4.1.1
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hspec-2.4.4@hspec-2.4.4-Ct0Af2AzisB8bPqGMHHFvj
                      hspec-core-2.4.4@hspec-core-2.4.4-Ezb0jq4rRfBJWZtpolvs1E
                      hspec-expectations-0.8.2@hspec-expectations-0.8.2-DujBeQFEMmfJJRLad7XQgd
                      integer-gmp-1.0.0.1
                      nucleotide-count-1.2.0.4@nucleotide-count-1.2.0.4-SLrRg0CK4gKN03Rx7ZIdN
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      quickcheck-io-0.2.0@quickcheck-io-0.2.0-4pLO1WRxoBW9gt8EnME0zS
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      setenv-0.1.1.3@setenv-0.1.1.3-8dEhk6JWvlmCmVyBammSpu
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      template-haskell-2.11.1.0
                      tf-random-0.5@tf-random-0.5-CJZw1ZWS5MOJlR60HqKEZL
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      unix-2.7.2.1@unix-2.7.2.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         quickcheck-io-0.2.0@quickcheck-io-0.2.0-4pLO1WRxoBW9gt8EnME0zS:Test.QuickCheck.IO
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         hspec-core-2.4.4@hspec-core-2.4.4-Ezb0jq4rRfBJWZtpolvs1E:Test.Hspec.Core.Example
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
import  -/  base-4.9.1.0:Data.Either 20b09ef8d0a5b74fdec011c40c1587f5
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 0fd5c8559af8bc4b6f38b9cf9ba5a467
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base 8b155a212edaca6c85bcefe65a8bc505
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  hspec-2.4.4@hspec-2.4.4-Ct0Af2AzisB8bPqGMHHFvj:Test.Hspec 04ea8eba4a0731a497f82df2f1be76d5
import  -/  hspec-2.4.4@hspec-2.4.4-Ct0Af2AzisB8bPqGMHHFvj:Test.Hspec.Runner 11c60306f6abefc14b2648248adfeb59
import  -/  hspec-core-2.4.4@hspec-core-2.4.4-Ezb0jq4rRfBJWZtpolvs1E:Test.Hspec.Core.Options ea8c946844f21706b5d360439d3e5650
import  -/  hspec-core-2.4.4@hspec-core-2.4.4-Ezb0jq4rRfBJWZtpolvs1E:Test.Hspec.Core.Runner c79a89c5a9ba4275f04053dfa6118e70
import  -/  hspec-core-2.4.4@hspec-core-2.4.4-Ezb0jq4rRfBJWZtpolvs1E:Test.Hspec.Core.Spec 4de3fc7b2286a4370366c92ba3ff97ab
import  -/  hspec-core-2.4.4@hspec-core-2.4.4-Ezb0jq4rRfBJWZtpolvs1E:Test.Hspec.Core.Spec.Monad 36dacd035c3a2115d6655a60a7bcad9c
import  -/  hspec-expectations-0.8.2@hspec-expectations-0.8.2-DujBeQFEMmfJJRLad7XQgd:Test.Hspec.Expectations 29d4e6711b7d6d8a68fed679467f46e6
import  -/  nucleotide-count-1.2.0.4@nucleotide-count-1.2.0.4-SLrRg0CK4gKN03Rx7ZIdN:DNA 8b9d44608f6d69e523e85da7dc83ef0c
d0d2195a9706201ae377cb29ba980d68
  $s$fEqEither ::
    GHC.Classes.Eq
      (Data.Either.Either
         GHC.Base.String (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Either.Either
                       GHC.Base.String (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int))
                  (Data.Either.$fEqEither_$c==
                     @ GHC.Base.String
                     @ (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                     Main.$s$fEqEither2
                     Main.$s$fEqEither1)
                  (Data.Either.$fEqEither_$c/=
                     @ GHC.Base.String
                     @ (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                     Main.$s$fEqEither2
                     Main.$s$fEqEither1) -}
d8263630dcd2f7d93b739e49040c046f
  $s$fEqEither1 :: GHC.Classes.Eq GHC.Base.String
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                GHC.Classes.$fEq[]_$s$fEq[]1 -}
d3c5edfc128485d1d8d2c69076ecc343
  $s$fEqEither2 ::
    GHC.Classes.Eq (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fEqEither_$s$fEqMap -}
d92afdb9fb2419ae4735ee93b682fceb
  $s$fEqEither3 :: GHC.Classes.Eq GHC.Types.Char
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) GHC.Classes.$fEqChar -}
b9d9645604a438519fee0049f7af0c4e
  $s$fEqEither_$s$fEqMap ::
    GHC.Classes.Eq (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                  (Data.Map.Base.$fEqMap_$c==
                     @ GHC.Types.Char
                     @ GHC.Types.Int
                     Main.$s$fEqEither3
                     GHC.Classes.$fEqInt)
                  Main.$s$fEqEither_$s$fEqMap_$c/= -}
22ccf72690d6d115301199ca5a435a58
  $s$fEqEither_$s$fEqMap_$c/= ::
    Data.Map.Base.Map GHC.Types.Char GHC.Types.Int
    -> Data.Map.Base.Map GHC.Types.Char GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                   (y :: Data.Map.Base.Map GHC.Types.Char GHC.Types.Int) ->
                 GHC.Classes.not
                   (Data.Map.Base.$fEqMap_$c==
                      @ GHC.Types.Char
                      @ GHC.Types.Int
                      Main.$s$fEqEither3
                      GHC.Classes.$fEqInt
                      x
                      y)) -}
9461b9e6a4b6a204e841084c1045e288
  $s$fShowEither ::
    GHC.Show.Show
      (Data.Either.Either
         [GHC.Types.Char] (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Either.Either
                       [GHC.Types.Char] (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int))
                  (Data.Either.$fShowEither_$cshowsPrec
                     @ [GHC.Types.Char]
                     @ (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                     Main.$s$fShowEither_$dShow
                     Main.$s$fShowEither3)
                  (Data.Either.$fShowEither_$cshow
                     @ [GHC.Types.Char]
                     @ (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                     Main.$s$fShowEither_$dShow
                     Main.$s$fShowEither3)
                  Main.$s$fShowEither1 -}
af3953c28832e52c0035d75e60678463
  $s$fShowEither1 ::
    [Data.Either.Either
       [GHC.Types.Char] (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (eta :: [Data.Either.Either
                              [GHC.Types.Char] (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Data.Either.Either
                        [GHC.Types.Char] (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int))
                   Main.$s$fShowEither2
                   eta
                   eta1) -}
3921d50d7c0dcc73d7e7bfa07f1b4195
  $s$fShowEither2 ::
    Data.Either.Either
      [GHC.Types.Char] (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
    -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (w3 :: Data.Either.Either
                            [GHC.Types.Char]
                            (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)) ->
                 Data.Either.$w$cshowsPrec
                   @ [GHC.Types.Char]
                   @ (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                   Main.$s$fShowEither_$s$fShowMap
                   GHC.Show.$fShow[]_$s$fShow[]1
                   0#
                   w3) -}
f8808a19beee94d4f7a6c72ad955116b
  $s$fShowEither3 :: GHC.Show.Show GHC.Base.String
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                GHC.Show.$fShow[]_$s$fShow[]1 -}
3ea946301013ebb31f4855a00dc7aae5
  $s$fShowEither_$dShow ::
    GHC.Show.Show (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fShowEither_$s$fShowMap -}
5ed9b92ff3a6ec710fe2e5eab69c5f6e
  $s$fShowEither_$s$fShowMap ::
    GHC.Show.Show (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                  (Data.Map.Base.$fShowMap_$cshowsPrec
                     @ GHC.Types.Char
                     @ GHC.Types.Int
                     GHC.Show.$fShowChar
                     GHC.Show.$fShowInt)
                  (Data.Map.Base.$fShowMap_$cshow
                     @ GHC.Types.Char
                     @ GHC.Types.Int
                     GHC.Show.$fShowChar
                     GHC.Show.$fShowInt)
                  Main.$s$fShowEither_$s$fShowMap_$cshowList -}
d1df97d25eecab81c2b0e3db76c17fef
  $s$fShowEither_$s$fShowMap_$cshowList ::
    [Data.Map.Base.Map GHC.Types.Char GHC.Types.Int] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Data.Map.Base.Map GHC.Types.Char GHC.Types.Int])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                   (Data.Map.Base.$fShowMap_$cshowsPrec
                      @ GHC.Types.Char
                      @ GHC.Types.Int
                      GHC.Show.$fShowChar
                      GHC.Show.$fShowInt
                      GHC.Show.shows22)
                   ls
                   s) -}
851d72133c31aff85b6c65d1135d328e
  $sfromList ::
    [(GHC.Types.Char, a)] -> Data.Map.Base.Map GHC.Types.Char a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(GHC.Types.Char, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Base.Tip @ GHC.Types.Char @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { GHC.Types.C# ipv ->
                           Data.Map.Base.Bin
                             @ GHC.Types.Char
                             @ a
                             1#
                             dt
                             x
                             (Data.Map.Base.Tip @ GHC.Types.Char @ a)
                             (Data.Map.Base.Tip @ GHC.Types.Char @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of wild4 { GHC.Types.C# c1 ->
                           case ky of wild5 { GHC.Types.C# c2 ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.geChar# c1 c2) of wild6 {
                             GHC.Types.False
                             -> Main.$wpoly_go10
                                  @ a
                                  1#
                                  (Data.Map.Base.Bin
                                     @ GHC.Types.Char
                                     @ a
                                     1#
                                     wild4
                                     x
                                     (Data.Map.Base.Tip @ GHC.Types.Char @ a)
                                     (Data.Map.Base.Tip @ GHC.Types.Char @ a))
                                  wild2
                             GHC.Types.True
                             -> Main.$sfromList1
                                  @ a
                                  (Data.Map.Base.Bin
                                     @ GHC.Types.Char
                                     @ a
                                     1#
                                     wild4
                                     x
                                     (Data.Map.Base.Tip @ GHC.Types.Char @ a)
                                     (Data.Map.Base.Tip @ GHC.Types.Char @ a))
                                  wild2 } } } } } } }) -}
2e644ebc8bff3a27effe285491bd8bbe
  $sfromList1 ::
    Data.Map.Base.Map GHC.Types.Char a1
    -> [(GHC.Types.Char, a1)] -> Data.Map.Base.Map GHC.Types.Char a1
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
6c3842452278f7eeb406a0cfb159b09c
  $w$sgo10 ::
    GHC.Prim.Char#
    -> a1
    -> Data.Map.Base.Map GHC.Types.Char a1
    -> Data.Map.Base.Map GHC.Types.Char a1
  {- Arity: 3, Strictness: <L,U><L,U><S,1*U>, Inline: [0] -}
67be924dd2ae331b450bd630fee81ddc
  $wpoly_go10 ::
    GHC.Prim.Int#
    -> Data.Map.Base.Map GHC.Types.Char a
    -> [(GHC.Types.Char, a)]
    -> Data.Map.Base.Map GHC.Types.Char a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
41c08d01e75ff56175ee2de03fdafe26
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
27e3d8b1cf80ab359b07de8514f40426
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Hspec.Core.Runner.hspec2
                        Main.main171
                        Main.main2
                          `cast`
                        (Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                            <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                            <GHC.Types.IO>_R
                                            <()>_N))
                                  (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0] <()>_N) <()>_N)))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.die2 @ () ipv
                   0# -> (# ipv, GHC.Tuple.() #) } } } }) -}
2b5d1b45239031db034518afd887d368
  main10 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main11
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
93b148ff533b4b55efa7699deccf3cab
  main100 :: [(GHC.Types.Char, GHC.Types.Int)]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Char, GHC.Types.Int)
                   Main.main104
                   Main.main101) -}
4486457c39fd5bdab02ba78aeb5d7297
  main101 :: [(GHC.Types.Char, GHC.Types.Int)]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Char, GHC.Types.Int)
                   Main.main102
                   (GHC.Types.[] @ (GHC.Types.Char, GHC.Types.Int))) -}
3bace14f00b213863a870ab6b076dce9
  main102 :: (GHC.Types.Char, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.main59, Main.main103)) -}
605e6a2d8cc3a793bb9ddf38e1754819
  main103 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 0#) -}
b527553e031bbb836bfd24d255437848
  main104 :: (GHC.Types.Char, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.main62, Main.main105)) -}
bb6d62ba5da5d8ce532832ae1287c63e
  main105 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 8#) -}
93320ffa18ead6514c7bdec1e47e46d9
  main106 :: (GHC.Types.Char, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.main65, Main.main103)) -}
222bf4ff4d2285882228379d6140011c
  main107 :: (GHC.Types.Char, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.main68, Main.main103)) -}
776ad3228408123977f53514dea09530
  main108 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main109
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
5e54f3c22b8d001f59a89fc1601c101b
  main109 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main110) -}
cc83b3ddd38667de3bdc89112365b18c
  main11 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main12) -}
cecf0077cbcb175e2f50ca908e27accb
  main110 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main111) -}
c6a4203bd790a0c3738c45ebbe610ddb
  main111 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main112) -}
b570c1a1fc5cb0c2dd372b835335a064
  main112 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main113) -}
5cc26c5e07ee986183bc3ec7efa6282d
  main113 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main40
                   Main.main114
                   GHC.Stack.Types.EmptyCallStack) -}
65724a72496a37c818a83b5deac71caf
  main114 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main28
                   Main.main27
                   Main.main26
                   Main.main116
                   Main.main38
                   Main.main116
                   Main.main115) -}
341db1897e299c849f219bd9217b0a29
  main115 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 56#) -}
50b9fa1b900660cc01841637b3335c02
  main116 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 32#) -}
622555dd8fe9736823605fd0726944b6
  main117 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main119
                   Main.main118) -}
ca50f86c68795b78def2ae40bc5205b5
  main118 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "epetitive-sequence-has-only-guanosine"#) -}
f1c8396b63ce1e2932a90ee01aaceab1
  main119 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'r'#) -}
164e41e29a50c86f8036b5acf476e739
  main12 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main41
                   Main.main30
                   GHC.Types.False
                   Main.main13
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
cbbc4c76b692c5048a827839a8842052
  main120 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main121
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
9b084bda1e1024bb2620d2b0d4f9da22
  main121 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main122) -}
fed398a546c41505c07c4896288066f0
  main122 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main143
                   Main.main134
                   GHC.Types.False
                   Main.main123
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
3a133d21543de2e42b86addf1734e290
  main123 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main124) -}
a7fd0d544e533bb80709a3310ccb6b0d
  main124 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main69
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main127
                   Main.main125) -}
16d40d1b06a70486a01a7dbc6a8e0bc4
  main125 ::
    Data.Either.Either
      GHC.Base.String (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
  {- Unfolding: (DNA.nucleotideCounts Main.main126) -}
3eb5c0706c287cda39e4ec4e6abf2031
  main126 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "G"#) -}
7971f3db902c5873e31485eab28681ce
  main127 ::
    Data.Either.Either
      GHC.Base.String (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
  {- Unfolding: (Data.Either.Right
                   @ GHC.Base.String
                   @ (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                   Main.main128) -}
d1cc79020aaeb839c1f001b4907b739e
  main128 :: Data.Map.Base.Map GHC.Types.Char GHC.Types.Int
  {- Unfolding: (Main.$sfromList @ GHC.Types.Int Main.main129) -}
330c0faf64e386ac298bda05eda5cded
  main129 :: [(GHC.Types.Char, GHC.Types.Int)]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Char, GHC.Types.Int)
                   Main.main107
                   Main.main130) -}
cc5067f287fcea55e058106009b47abd
  main13 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main14 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
b07b9c0087f36bfbedb71e8aaf58ad4f
  main130 :: [(GHC.Types.Char, GHC.Types.Int)]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Char, GHC.Types.Int)
                   Main.main106
                   Main.main131) -}
3b8e6755ef87db3fa4196147c43ae742
  main131 :: [(GHC.Types.Char, GHC.Types.Int)]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Char, GHC.Types.Int)
                   Main.main132
                   Main.main101) -}
ec9f2d3bcb84171bd6b853220ffdd5c0
  main132 :: (GHC.Types.Char, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.main62, Main.main133)) -}
ca380bf8b4e67f79b5791ee9d692d8a6
  main133 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 1#) -}
3f6a67de95f5d0beeb8026a27fcacb5a
  main134 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main135
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
eb84284eb9287cddc9d615bdb4830eba
  main135 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main136) -}
c66aabbbd67487b7d16bbfb463408f26
  main136 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main137) -}
e894be276d378fc9306bccaba2e03989
  main137 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main138) -}
444a97fcdf23666bd24ccd255462b014
  main138 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main139) -}
5c8eb5fae4ef34033ff55baa79278175
  main139 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main40
                   Main.main140
                   GHC.Stack.Types.EmptyCallStack) -}
7e3fcc9387fb84942e9ceaf1bc7098d1
  main14 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldContain13
                   Main.main20
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.main17
                   Main.main15) -}
d7560bb9ec59273a72cae8ced0399ef5
  main140 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main28
                   Main.main27
                   Main.main26
                   Main.main142
                   Main.main38
                   Main.main142
                   Main.main141) -}
81c0b09b843d802b53badf4f94449396
  main141 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 68#) -}
55d1c5d7b8c304627f8576e7332493e8
  main142 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 26#) -}
708ef484833368a8a9a0064d4c491f08
  main143 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main88
                   Main.main144) -}
12a54dbae5443ad7ae1ca4f296bd6b81
  main144 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "an count one nucleotide in single-character input"#) -}
2f8b4df4960669747825e0b5cb303fce
  main145 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main146
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
df79263aebec9d502c9552d40525393e
  main146 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main147) -}
368aa5dfab890a011d568c7d9c46c6a4
  main147 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main165
                   Main.main157
                   GHC.Types.False
                   Main.main148
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
4a9679687114c1574544c03618bef66b
  main148 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main149) -}
47f332dd5a94a0a734e97eb89d4ec125
  main149 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main69
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main151
                   Main.main150) -}
41f62492864e2bdcaccce08353e31bdf
  main15 :: GHC.Types.Bool
  {- Unfolding: (case Main.main_eta of wild {
                   Data.Either.Left ds1 -> GHC.Types.True
                   Data.Either.Right ds1 -> GHC.Types.False }) -}
abb7f884721173526c4d754709f4560b
  main150 ::
    Data.Either.Either
      GHC.Base.String (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
  {- Unfolding: (DNA.nucleotideCounts
                   (GHC.Types.[] @ GHC.Types.Char)) -}
32bdcc27b792eec26032a7ff7d0f9e51
  main151 ::
    Data.Either.Either
      GHC.Base.String (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
  {- Unfolding: (Data.Either.Right
                   @ GHC.Base.String
                   @ (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                   Main.main152) -}
64626768196152e14ee8f297c8fbf8c7
  main152 :: Data.Map.Base.Map GHC.Types.Char GHC.Types.Int
  {- Unfolding: (Main.$sfromList @ GHC.Types.Int Main.main153) -}
d78399ffc7e3ab59f330ed1f14f92baf
  main153 :: [(GHC.Types.Char, GHC.Types.Int)]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Char, GHC.Types.Int)
                   Main.main107
                   Main.main154) -}
2f6b14609a3d0a802b2996a2ed1c3d76
  main154 :: [(GHC.Types.Char, GHC.Types.Int)]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Char, GHC.Types.Int)
                   Main.main106
                   Main.main155) -}
40f605155ce23676f61ca558f2b96d45
  main155 :: [(GHC.Types.Char, GHC.Types.Int)]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Char, GHC.Types.Int)
                   Main.main156
                   Main.main101) -}
8b4144855ef5408d6a07f88bfd29d06d
  main156 :: (GHC.Types.Char, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.main62, Main.main103)) -}
0bad63f5be2c118cb16d2fd9ea84274a
  main157 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main158
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
39105f569525fe49fd8194ca938c2859
  main158 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main159) -}
91eaf45acc560a969ad452766ce80db7
  main159 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main160) -}
1ee9c435902cb0a1c6152fcd1fd05648
  main16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "AGXXACT"#) -}
764bf3c579faa9db3b14ba4682627cac
  main160 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main161) -}
7e00a1f932ce585354011accb38de0d4
  main161 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main162) -}
179a71c037209027e346bf502a670368
  main162 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main40
                   Main.main163
                   GHC.Stack.Types.EmptyCallStack) -}
5829003b93cd895540ad5a665fca1fcd
  main163 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main28
                   Main.main27
                   Main.main26
                   Main.main67
                   Main.main38
                   Main.main67
                   Main.main164) -}
6e35d8d5ef2f38025fbfe5d45cd4a2a7
  main164 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 53#) -}
0ed2458e1565e95b3eb35eb4b6ab0149
  main165 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main167
                   Main.main166) -}
70b9c6c3763a74222e4984d1df34450c
  main166 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "mpty dna strand has no nucleotides"#) -}
abbd89225578edea16615d5596bbf91a
  main167 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'e'#) -}
93c7248f6cb9a67c17fd7e23829f9e51
  main168 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main170
                   Main.main169) -}
4a882f34b37317377468a381b6133c75
  main169 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ucleotideCounts"#) -}
09894fb33c92f371787724032a603ee1
  main17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "predicate failed on: "#
                   Main.main18) -}
16ac9dc3991103a5a0791a0b2870377d
  main170 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'n'#) -}
7a9125482c6f2ca88ab9100ac4728ec2
  main171 :: Test.Hspec.Core.Options.Config
  {- Unfolding: (Test.Hspec.Core.Options.Config
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.True
                   (GHC.Base.Nothing @ GHC.IO.FilePath)
                   GHC.Types.False
                   GHC.Types.False
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ GHC.Integer.Type.Integer)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Test.Hspec.Core.Example.defaultParams1
                   Test.Hspec.Core.Options.ColorAuto
                   GHC.Types.True
                   (GHC.Base.Nothing @ Test.Hspec.Core.Formatters.Monad.Formatter)
                   GHC.Types.False
                   Test.Hspec.Core.Options.defaultConfig1
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
33cef7b1d19d7adba122a8712f4ee43c
  main172 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
446dc493626df6ed1c95419ba15ca0d6
  main18 :: [GHC.Types.Char]
  {- Unfolding: (case Main.main_eta of wild {
                   Data.Either.Left b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Data.Either.$fShowEither3
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.shows6
                           (GHC.Show.showLitString b1 Main.main19))
                   Data.Either.Right b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Data.Either.$fShowEither2
                        (Data.Map.Base.$w$cshowsPrec
                           @ GHC.Types.Char
                           @ GHC.Types.Int
                           GHC.Show.$fShowChar
                           GHC.Show.$fShowInt
                           11#
                           b1
                           (GHC.Types.[] @ GHC.Types.Char)) }) -}
f6525354e06dc8f7f01c8d3769e70d7e
  main19 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows6
                   (GHC.Types.[] @ GHC.Types.Char)) -}
a21271c03fd90429db93ac098e1491bb
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           [Test.Hspec.Core.Tree.Tree
              (Test.Hspec.Core.Example.ActionWith ())
              (Test.Hspec.Core.Tree.Item ())]) #)
  {- Arity: 1,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 (# eta, Main.main3 #)) -}
20abe7f173f3e0265835d2b6bab5d1ec
  main20 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldContain12
                   Test.Hspec.Expectations.shouldSatisfy2
                   Main.main21) -}
a546778535bdb943100cf8bcd54869e4
  main21 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main29
                   Main.main22
                   GHC.Stack.Types.EmptyCallStack) -}
ca64d0fd76b14abd92ab16b1a4f4daf2
  main22 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main28
                   Main.main27
                   Main.main26
                   Main.main25
                   Main.main24
                   Main.main25
                   Main.main23) -}
9fc5be404ae33ab34cad3d09fc38c4f9
  main23 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 64#) -}
09217900ac073b2ade48f29bcdc8c56a
  main24 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 15#) -}
893efd433b9af3617e665c6859f818a4
  main25 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 46#) -}
1fbe349353aea2a39fb075dff1a9dc5d
  main26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "test/Tests.hs"#) -}
ded6ee6c839cfc1080a7754bde0887d5
  main27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Main"#) -}
4a9073bd866e21f7b6864ed207ba7014
  main28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "main"#) -}
d6b2b5704c4f91578d91bce7924a8cce
  main29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouldSatisfy"#) -}
8f318f091a3f14994f7a94c21bf005cc
  main3 ::
    ((),
     [Test.Hspec.Core.Tree.Tree
        (Test.Hspec.Core.Example.ActionWith ())
        (Test.Hspec.Core.Tree.Item ())])
  {- Unfolding: ((GHC.Tuple.(), Main.main4)) -}
0bd352c2516360b50e8c1264c71b1bfb
  main30 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main31
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
ca95c76dac2a733b403ae6a7993a2fd6
  main31 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main32) -}
40507a04b92d904a8378b5fa81dfee1c
  main32 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main33) -}
5ae035f6670431cd27527a581c3cb330
  main33 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main34) -}
09780d0556eb7786127f0c5c7df8b6f6
  main34 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main35) -}
2e28732207a0031bd40bad231d202961
  main35 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main40
                   Main.main36
                   GHC.Stack.Types.EmptyCallStack) -}
c71073c46fed03a9b12fe13310e55041
  main36 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main28
                   Main.main27
                   Main.main26
                   Main.main39
                   Main.main38
                   Main.main39
                   Main.main37) -}
f673feba5a876e2988138b58026076d8
  main37 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 34#) -}
caa8a2c0bfbdb707a5e01fe183418803
  main38 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 13#) -}
bc65b65771fd705f201d92c77cbd91bc
  main39 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 45#) -}
3bf761cb470bbaab4d16c22317c1da4e
  main4 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main5
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.Tree
                           (Test.Hspec.Core.Example.ActionWith ())
                           (Test.Hspec.Core.Tree.Item ())))) -}
06938e940c09bc81674611f74a29a220
  main40 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "it"#) -}
3416db4fec2fe3c307f247b00252c75d
  main41 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main43
                   Main.main42) -}
d571999787e6461dd9b6060c531f919d
  main42 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "alidates strand"#) -}
9af63997ffe43e11ec00444805d1813c
  main43 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'v'#) -}
24f1c116216ad966045fb6b6b6b84f78
  main44 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main45
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
9a046b3660d64697548a6fea3a5dbbac
  main45 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main46) -}
a50c473e8484403b04b94eed34f60c15
  main46 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main86
                   Main.main77
                   GHC.Types.False
                   Main.main47
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
7c470ba325a233ceb4590c28ff13ca05
  main47 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main48) -}
87d0c7f7745fa8a975559524b42e710b
  main48 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main69
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main51
                   Main.main49) -}
cda3f4a6b1ce0ebc111d98c17e256b1e
  main49 ::
    Data.Either.Either
      GHC.Base.String (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
  {- Unfolding: (DNA.nucleotideCounts Main.main50) -}
0ec4ddb9e2db6578d6b6284a2df4f046
  main5 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main168
                   Main.main6) -}
6726fcdcff583ee15c1e11c3776cf14e
  main50 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAGAGTGTCTGATAGCAGC"#) -}
154a151eaf4ad929d5c459144eba367e
  main51 ::
    Data.Either.Either
      GHC.Base.String (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
  {- Unfolding: (Data.Either.Right
                   @ GHC.Base.String
                   @ (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                   Main.main52) -}
e117829736f0f406bd5064f8e0db807d
  main52 :: Data.Map.Base.Map GHC.Types.Char GHC.Types.Int
  {- Unfolding: (Main.$sfromList @ GHC.Types.Int Main.main53) -}
30bc2091b26ab6961698747860b5e23e
  main53 :: [(GHC.Types.Char, GHC.Types.Int)]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Char, GHC.Types.Int)
                   Main.main66
                   Main.main54) -}
65a97a30e18ddfb6a718b1f57c1fadde
  main54 :: [(GHC.Types.Char, GHC.Types.Int)]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Char, GHC.Types.Int)
                   Main.main63
                   Main.main55) -}
9aa0c87667f0b98dc10f1800cbbdde06
  main55 :: [(GHC.Types.Char, GHC.Types.Int)]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Char, GHC.Types.Int)
                   Main.main60
                   Main.main56) -}
1210df577e235214ce494bf7fc48e9be
  main56 :: [(GHC.Types.Char, GHC.Types.Int)]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Char, GHC.Types.Int)
                   Main.main57
                   (GHC.Types.[] @ (GHC.Types.Char, GHC.Types.Int))) -}
6213acfa55ec8ba5e3fd95d9cfa0066c
  main57 :: (GHC.Types.Char, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.main59, Main.main58)) -}
d611a6d5b98fb0a9fe9b4d50f12084df
  main58 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 21#) -}
4424faca6952cd6b23afd4ba57fee0cd
  main59 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'T'#) -}
baa3ca91e21f357b1a30b0f8aca61b11
  main6 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main145
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main7) -}
cd59059afd972c4e1d1e0407093ad88d
  main60 :: (GHC.Types.Char, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.main62, Main.main61)) -}
6ea60b49c48699a70cb5e9e9564e26c1
  main61 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 17#) -}
d53179204f7eb4a4079d7b032d289878
  main62 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'G'#) -}
dbb47417426fdb7767653629153476ce
  main63 :: (GHC.Types.Char, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.main65, Main.main64)) -}
5c32c93f478225b14879913f6eb17362
  main64 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 12#) -}
94acd6ecd00c5c2f58d8f040c5afa9c0
  main65 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'C'#) -}
cdf20687db91dae51e517c9f94355bba
  main66 :: (GHC.Types.Char, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.main68, Main.main67)) -}
2f662237016c64330a2f62ed23732977
  main67 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 20#) -}
5f7c0a946d9828ed3e51581cd31431e5
  main68 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'A'#) -}
a46f8bd851aae350f9a40255ff1ce145
  main69 ::
    GHC.Base.String
    -> Data.Either.Either
         GHC.Base.String (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
    -> Data.Either.Either
         GHC.Base.String (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ (Data.Either.Either
                        GHC.Base.String (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int))
                   Main.main70
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fEqEither
                   Main.$s$fShowEither) -}
cda5add6b7700d64db0f581095de1c2b
  main7 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main120
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main8) -}
da4a98baafa0ac11407f92119a41257f
  main70 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main71) -}
5dc65145944a7f47f70df85efcb953a5
  main71 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main72) -}
5e483eea3828ff336acf3196a8583bf3
  main72 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main76
                   Main.main73
                   GHC.Stack.Types.EmptyCallStack) -}
d498b685782ebbfa1e5a2aff926c435a
  main73 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main28
                   Main.main27
                   Main.main26
                   Main.main75
                   Main.main37
                   Main.main75
                   Main.main74) -}
16141bdb38cd788ddc0e3a35b3e41a52
  main74 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 67#) -}
99a007526d8f6b218bca6dbd8bb68ef6
  main75 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 16#) -}
32bfb37d10bb05b3e6ce7639169064cd
  main76 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouldBe"#) -}
58dfff647a2f6443e3c369024a08876d
  main77 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main78
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
39840682462785421d879a878b4683af
  main78 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main79) -}
8d8146b52eb5d123563530bb42be4ead
  main79 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main80) -}
fb71c51a9eb6d63f23de4ea327113886
  main8 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main89
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main9) -}
88d796cba9c805bd88a14e62b531fd3e
  main80 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main81) -}
cd5067429a13df5ee5fc78b2fc2089ae
  main81 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main82) -}
241a3db60523ce47764826ac5f74e9e6
  main82 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main40
                   Main.main83
                   GHC.Stack.Types.EmptyCallStack) -}
b3e2eb77c2602d6540a3daca592968a0
  main83 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main28
                   Main.main27
                   Main.main26
                   Main.main85
                   Main.main38
                   Main.main85
                   Main.main84) -}
c47ccd9098f5fc55818b075d510a25cf
  main84 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 40#) -}
eac70c163809f9f69bc85c49833fce76
  main85 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 38#) -}
bf6a33635bc2157e1e7224e0b78544ad
  main86 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main88
                   Main.main87) -}
7a74adcb24b6ad5cacaf06c8f9e8825e
  main87 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "ounts all nucleotides"#) -}
1923b1d987917f49ab49ac26d74c4054
  main88 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'c'#) -}
2c266747d5e5bde0ac8202f34d8ef5ba
  main89 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main90
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
9aedccdc4e99b9a513f6903254ec9938
  main9 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main44
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main10
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
dbd231e56c2df4fc6d37ce050346b267
  main90 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main91) -}
d227c36ad356ed251bea2e4309712bee
  main91 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main117
                   Main.main108
                   GHC.Types.False
                   Main.main92
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
8aa5c988e9e20d0e7ef12ba7c4aa6124
  main92 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main93) -}
2d7e772c129301e33f65b7799882cf35
  main93 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main69
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main96
                   Main.main94) -}
aebd7d0d7d75d649c378efa63ed593d1
  main94 ::
    Data.Either.Either
      GHC.Base.String (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
  {- Unfolding: (DNA.nucleotideCounts Main.main95) -}
773e08845a23f3b0224eaa60e289c1db
  main95 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GGGGGGGG"#) -}
332b313e3fb469474ff60f7ad9d281de
  main96 ::
    Data.Either.Either
      GHC.Base.String (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
  {- Unfolding: (Data.Either.Right
                   @ GHC.Base.String
                   @ (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                   Main.main97) -}
371ce880515a1219872c182fca028e25
  main97 :: Data.Map.Base.Map GHC.Types.Char GHC.Types.Int
  {- Unfolding: (Main.$sfromList @ GHC.Types.Int Main.main98) -}
ef32d7542ea0163979361d17e508cb5a
  main98 :: [(GHC.Types.Char, GHC.Types.Int)]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Char, GHC.Types.Int)
                   Main.main107
                   Main.main99) -}
9c7f269e91149b22a0e7537fffe8d499
  main99 :: [(GHC.Types.Char, GHC.Types.Int)]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Char, GHC.Types.Int)
                   Main.main106
                   Main.main100) -}
8f006c6c3cbb8351a881ffabe76f744d
  main_eta ::
    Data.Either.Either
      GHC.Base.String (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
  {- Unfolding: (DNA.nucleotideCounts Main.main16) -}
"SPEC/Main $fEqEither @ String @ (Map Char Int)" [ALWAYS] forall ($dEq1 :: GHC.Classes.Eq
                                                                             GHC.Base.String)
                                                                 ($dEq :: GHC.Classes.Eq
                                                                            (Data.Map.Base.Map
                                                                               GHC.Types.Char
                                                                               GHC.Types.Int))
  Data.Either.$fEqEither @ [GHC.Types.Char]
                         @ (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                         $dEq
                         $dEq1
  = Main.$s$fEqEither
"SPEC/Main $fEqMap @ Char @ Int" [ALWAYS] forall ($dEq1 :: GHC.Classes.Eq
                                                             GHC.Types.Int)
                                                 ($dEq :: GHC.Classes.Eq GHC.Types.Char)
  Data.Map.Base.$fEqMap @ GHC.Types.Char @ GHC.Types.Int $dEq $dEq1
  = Main.$s$fEqEither_$s$fEqMap
"SPEC/Main $fEqMap_$c/= @ Char @ Int" [ALWAYS] forall ($dEq1 :: GHC.Classes.Eq
                                                                  GHC.Types.Int)
                                                      ($dEq :: GHC.Classes.Eq GHC.Types.Char)
  Data.Map.Base.$fEqMap_$c/= @ GHC.Types.Char
                             @ GHC.Types.Int
                             $dEq
                             $dEq1
  = Main.$s$fEqEither_$s$fEqMap_$c/=
"SPEC/Main $fShowEither @ [Char] @ (Map Char Int)" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                 [GHC.Types.Char])
                                                                   ($dShow :: GHC.Show.Show
                                                                                (Data.Map.Base.Map
                                                                                   GHC.Types.Char
                                                                                   GHC.Types.Int))
  Data.Either.$fShowEither @ [GHC.Types.Char]
                           @ (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                           $dShow
                           $dShow1
  = Main.$s$fShowEither
"SPEC/Main $fShowMap @ Char @ Int" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                 GHC.Types.Int)
                                                   ($dShow :: GHC.Show.Show GHC.Types.Char)
  Data.Map.Base.$fShowMap @ GHC.Types.Char
                          @ GHC.Types.Int
                          $dShow
                          $dShow1
  = Main.$s$fShowEither_$s$fShowMap
"SPEC/Main $fShowMap_$cshowList @ Char @ Int" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                            GHC.Types.Int)
                                                              ($dShow :: GHC.Show.Show
                                                                           GHC.Types.Char)
  Data.Map.Base.$fShowMap_$cshowList @ GHC.Types.Char
                                     @ GHC.Types.Int
                                     $dShow
                                     $dShow1
  = Main.$s$fShowEither_$s$fShowMap_$cshowList
"SPEC/Main fromList @ Char _" [ALWAYS] forall @ a
                                              ($dOrd :: GHC.Classes.Ord GHC.Types.Char)
  Data.Map.Base.fromList @ GHC.Types.Char @ a $dOrd
  = Main.$sfromList @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

